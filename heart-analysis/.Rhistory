trControl = cv_5,
tuneLength = 100
)
hd_rf_mod = train(
form = num ~ .,
data = hd_trn_full,
method = "rf",
trControl = cv_5,
verbose = FALSE
)
predict(hd_tree_mod, data = hd_trn_full , type = "raw")
predict(hd_knn_mod, data = hd_trn_full , type = "raw")
predict(hd_rf_mod, data = hd_trn_full , type = "raw")
hd_knn_mod
hd_tree_mod
hd_rf_mod
View(hd)
View(hd_trn_full)
hd_tree_mod #0.5628655
predict(hd_tree_mod, data = hd_trn_full , type = "raw")
predict(hd_knn_mod, data = hd_trn_full , type = "raw")
predict(hd_rf_mod, data = hd_trn_full , type = "raw")
knitr::opts_chunk$set(echo = FALSE, fig.align = 'center')
# load packages
library("tidyverse")
library("caret")
library("rpart")
library("rpart.plot")
# read full data
hd = readr::read_csv("data/hd.csv")
set.seed(42)
trn_idx = createDataPartition(hd$num, p = 0.80, list = TRUE)
hd_trn = hd[trn_idx$Resample1, ]
hd_tst = hd[-trn_idx$Resample1, ]
#coerce cha to factor
hd_trn$num = factor(hd_trn$num)
hd_trn$location = factor(hd_trn$location)
hd_trn$cp = factor(hd_trn$cp)
hd_trn$sex = factor(hd_trn$sex)
hd_trn$fbs = factor(hd_trn$fbs)
hd_trn$restecg = factor(hd_trn$restecg)
hd_trn$exang = factor(hd_trn$exang)
hd_trn[which(hd_trn$chol == 0), ]$chol = NA
hd_trn_full = na.omit(hd_trn)
#est val
set.seed(42)
est_idx = createDataPartition(hd_trn_full$num, p = 0.80, list = TRUE)
hd_est = hd_trn_full[est_idx$Resample1, ]
hd_val = hd_trn_full[-est_idx$Resample1, ]
cv_5 = trainControl(method = "cv", number = 5)
hd_tree_tune = expand.grid(
cp = c(0, 0.0001, 0.001, 0.01, 0.1, 1)
)
hd_knn_tune = expand.grid(
k= 1:100
)
hd_tree_mod = train(
form = num ~.,
data = hd_trn_full,
method = "rpart",
trControl = cv_5,
tuneLength = 10
)
hd_knn_mod = train(
form = num ~.,
data = hd_trn_full,
method = "knn",
trControl = cv_5,
tuneLength = 100
)
hd_rf_mod = train(
form = num ~ .,
data = hd_trn_full,
method = "rf",
trControl = cv_5,
verbose = FALSE
)
hd_tree_mod #0.5628655
hd_knn_mod #0.5546208
hd_rf_mod #0.5919417
knitr::opts_chunk$set(echo = FALSE, fig.align = 'center')
# load packages
library("tidyverse")
library("caret")
library("rpart")
library("rpart.plot")
# read full data
hd = readr::read_csv("data/hd.csv")
set.seed(42)
trn_idx = createDataPartition(hd$num, p = 0.80, list = TRUE)
hd_trn = hd[trn_idx$Resample1, ]
hd_tst = hd[-trn_idx$Resample1, ]
#coerce cha to factor
hd_trn$num = factor(hd_trn$num)
hd_trn$location = factor(hd_trn$location)
hd_trn$cp = factor(hd_trn$cp)
hd_trn$sex = factor(hd_trn$sex)
hd_trn$fbs = factor(hd_trn$fbs)
hd_trn$restecg = factor(hd_trn$restecg)
hd_trn$exang = factor(hd_trn$exang)
hd_trn[which(hd_trn$chol == 0), ]$chol = NA
hd_trn_full = na.omit(hd_trn)
#est val
set.seed(42)
est_idx = createDataPartition(hd_trn_full$num, p = 0.80, list = TRUE)
hd_est = hd_trn_full[est_idx$Resample1, ]
hd_val = hd_trn_full[-est_idx$Resample1, ]
cv_5 = trainControl(method = "cv", number = 5)
hd_tree_tune = expand.grid(
cp = c(0, 0.0001, 0.001, 0.01, 0.1, 1)
)
hd_knn_tune = expand.grid(
k= 1:100
)
hd_tree_mod = train(
form = num ~.,
data = hd_trn_full,
method = "rpart",
trControl = cv_5,
tuneLength = 10
)
hd_knn_mod = train(
form = num ~.,
data = hd_trn_full,
method = "knn",
trControl = cv_5,
tuneLength = 100
)
hd_rf_mod = train(
form = num ~ .,
data = hd_trn_full,
method = "rf",
trControl = cv_5,
verbose = FALSE
)
hd_tree_mod #0.5628655
hd_knn_mod #0.5546208
hd_rf_mod #0.5919417
knitr::opts_chunk$set(echo = FALSE, fig.align = 'center')
# load packages
library("tidyverse")
library("caret")
library("rpart")
library("rpart.plot")
# read full data
hd = readr::read_csv("data/hd.csv")
set.seed(42)
trn_idx = createDataPartition(hd$num, p = 0.80, list = TRUE)
hd_trn = hd[trn_idx$Resample1, ]
hd_tst = hd[-trn_idx$Resample1, ]
#coerce cha to factor
hd_trn$num = factor(hd_trn$num)
hd_trn$location = factor(hd_trn$location)
hd_trn$cp = factor(hd_trn$cp)
hd_trn$sex = factor(hd_trn$sex)
hd_trn$fbs = factor(hd_trn$fbs)
hd_trn$restecg = factor(hd_trn$restecg)
hd_trn$exang = factor(hd_trn$exang)
hd_trn[which(hd_trn$chol == 0), ]$chol = NA
hd_trn_full = na.omit(hd_trn)
#est val
set.seed(42)
est_idx = createDataPartition(hd_trn_full$num, p = 0.80, list = TRUE)
hd_est = hd_trn_full[est_idx$Resample1, ]
hd_val = hd_trn_full[-est_idx$Resample1, ]
cv_5 = trainControl(method = "cv", number = 5)
hd_tree_tune = expand.grid(
cp = c(0, 0.0001, 0.001, 0.01, 0.1, 1)
)
hd_knn_tune = expand.grid(
k= 1:100
)
hd_tree_mod = train(
form = num ~.,
data = hd_trn_full,
method = "rpart",
trControl = cv_5,
tuneLength = 10
)
hd_knn_mod = train(
form = num ~.,
data = hd_trn_full,
method = "knn",
trControl = cv_5,
tuneLength = 100
)
hd_rf_mod = train(
form = num ~ .,
data = hd_trn_full,
method = "rf",
trControl = cv_5,
verbose = FALSE
)
hd_tree_mod #0.5628655
hd_knn_mod #0.5546208
hd_rf_mod #0.5919417
hd_knn_tune
hd_knn_tune
hd_knn_mod #0.5546208
knitr::opts_chunk$set(echo = FALSE, fig.align = 'center')
# load packages
library("tidyverse")
library("caret")
library("rpart")
library("rpart.plot")
# read full data
hd = readr::read_csv("data/hd.csv")
set.seed(42)
trn_idx = createDataPartition(hd$num, p = 0.80, list = TRUE)
hd_trn = hd[trn_idx$Resample1, ]
hd_tst = hd[-trn_idx$Resample1, ]
#coerce cha to factor
hd_trn$num = factor(hd_trn$num)
hd_trn$location = factor(hd_trn$location)
hd_trn$cp = factor(hd_trn$cp)
hd_trn$sex = factor(hd_trn$sex)
hd_trn$fbs = factor(hd_trn$fbs)
hd_trn$restecg = factor(hd_trn$restecg)
hd_trn$exang = factor(hd_trn$exang)
hd_trn[which(hd_trn$chol == 0), ]$chol = NA
hd_trn_full = na.omit(hd_trn)
#est val
set.seed(42)
est_idx = createDataPartition(hd_trn_full$num, p = 0.80, list = TRUE)
hd_est = hd_trn_full[est_idx$Resample1, ]
hd_val = hd_trn_full[-est_idx$Resample1, ]
cv_5 = trainControl(method = "cv", number = 5)
hd_tree_mod = train(
form = num ~.,
data = hd_trn_full,
method = "rpart",
trControl = cv_5,
tuneLength = 10
)
hd_knn_mod = train(
form = num ~.,
data = hd_trn_full,
method = "knn",
trControl = cv_5,
tuneLength = 100
)
hd_rf_mod = train(
form = num ~ .,
data = hd_trn_full,
method = "rf",
trControl = cv_5,
verbose = FALSE
)
hd_tree_mod #0.5628655
hd_knn_mod #0.5546208
hd_rf_mod #0.5919417
knitr::opts_chunk$set(echo = FALSE, fig.align = 'center')
# load packages
library("tidyverse")
library("caret")
library("rpart")
library("rpart.plot")
# read full data
hd = readr::read_csv("data/hd.csv")
set.seed(42)
trn_idx = createDataPartition(hd$num, p = 0.80, list = TRUE)
hd_trn = hd[trn_idx$Resample1, ]
hd_tst = hd[-trn_idx$Resample1, ]
#coerce cha to factor
hd_trn$num = factor(hd_trn$num)
hd_trn$location = factor(hd_trn$location)
hd_trn$cp = factor(hd_trn$cp)
hd_trn$sex = factor(hd_trn$sex)
hd_trn$fbs = factor(hd_trn$fbs)
hd_trn$restecg = factor(hd_trn$restecg)
hd_trn$exang = factor(hd_trn$exang)
hd_trn[which(hd_trn$chol == 0), ]$chol = NA
hd_trn_full = na.omit(hd_trn)
#est val
set.seed(42)
est_idx = createDataPartition(hd_trn_full$num, p = 0.80, list = TRUE)
hd_est = hd_trn_full[est_idx$Resample1, ]
hd_val = hd_trn_full[-est_idx$Resample1, ]
cv_5 = trainControl(method = "cv", number = 5)
hd_tree_mod = train(
form = num ~.,
data = hd_trn_full,
method = "rpart",
trControl = cv_5,
tuneLength = 10
)
hd_knn_mod = train(
form = num ~.,
data = hd_trn_full,
method = "knn",
trControl = cv_5,
tuneLength = 100
)
hd_rf_mod = train(
form = num ~ .,
data = hd_trn_full,
method = "rf",
trControl = cv_5,
verbose = FALSE
)
hd_tree_mod #0.5628655
hd_knn_mod #0.5546208
hd_rf_mod #0.5919417
knitr::opts_chunk$set(echo = FALSE, fig.align = 'center')
# load packages
library("tidyverse")
library("caret")
library("rpart")
library("rpart.plot")
# read full data
hd = readr::read_csv("data/hd.csv")
set.seed(42)
trn_idx = createDataPartition(hd$num, p = 0.80, list = TRUE)
hd_trn = hd[trn_idx$Resample1, ]
hd_tst = hd[-trn_idx$Resample1, ]
#coerce cha to factor
hd_trn$num = factor(hd_trn$num)
hd_trn$location = factor(hd_trn$location)
hd_trn$cp = factor(hd_trn$cp)
hd_trn$sex = factor(hd_trn$sex)
hd_trn$fbs = factor(hd_trn$fbs)
hd_trn$restecg = factor(hd_trn$restecg)
hd_trn$exang = factor(hd_trn$exang)
hd_trn[which(hd_trn$chol == 0), ]$chol = NA
hd_trn_full = na.omit(hd_trn)
#est val
set.seed(42)
est_idx = createDataPartition(hd_trn_full$num, p = 0.80, list = TRUE)
hd_est = hd_trn_full[est_idx$Resample1, ]
hd_val = hd_trn_full[-est_idx$Resample1, ]
set.seed(42)
cv_5 = trainControl(method = "cv", number = 5)
hd_tree_mod = train(
form = num ~.,
data = hd_trn_full,
method = "rpart",
trControl = cv_5,
tuneLength = 10
)
hd_knn_mod = train(
form = num ~.,
data = hd_trn_full,
method = "knn",
trControl = cv_5,
tuneLength = 100
)
hd_rf_mod = train(
form = num ~ .,
data = hd_trn_full,
method = "rf",
trControl = cv_5,
verbose = FALSE
)
hd_tree_mod #0.5628655
hd_knn_mod #0.5546208
hd_rf_mod #0.5919417
knitr::opts_chunk$set(echo = FALSE, fig.align = 'center')
# load packages
library("tidyverse")
library("caret")
library("rpart")
library("rpart.plot")
# read full data
hd = readr::read_csv("data/hd.csv")
set.seed(42)
trn_idx = createDataPartition(hd$num, p = 0.80, list = TRUE)
hd_trn = hd[trn_idx$Resample1, ]
hd_tst = hd[-trn_idx$Resample1, ]
#coerce cha to factor
hd_trn$num = factor(hd_trn$num)
hd_trn$location = factor(hd_trn$location)
hd_trn$cp = factor(hd_trn$cp)
hd_trn$sex = factor(hd_trn$sex)
hd_trn$fbs = factor(hd_trn$fbs)
hd_trn$restecg = factor(hd_trn$restecg)
hd_trn$exang = factor(hd_trn$exang)
hd_trn[which(hd_trn$chol == 0), ]$chol = NA
hd_trn_full = na.omit(hd_trn)
#est val
set.seed(42)
est_idx = createDataPartition(hd_trn_full$num, p = 0.80, list = TRUE)
hd_est = hd_trn_full[est_idx$Resample1, ]
hd_val = hd_trn_full[-est_idx$Resample1, ]
cv_5 = trainControl(method = "cv", number = 5)
hd_tree_mod = train(
form = num ~.,
data = hd_trn_full,
method = "rpart",
trControl = cv_5,
tuneLength = 10
)
hd_knn_mod = train(
form = num ~.,
data = hd_trn_full,
method = "knn",
trControl = cv_5,
tuneLength = 100
)
hd_rf_mod = train(
form = num ~ .,
data = hd_trn_full,
method = "rf",
trControl = cv_5,
verbose = FALSE
)
hd_tree_mod #0.5628655
hd_knn_mod #0.5546208
hd_rf_mod #0.5919417
knitr::opts_chunk$set(echo = FALSE, fig.align = 'center')
# load packages
library("tidyverse")
library("caret")
library("rpart")
library("rpart.plot")
# read full data
hd = readr::read_csv("data/hd.csv")
set.seed(42)
trn_idx = createDataPartition(hd$num, p = 0.80, list = TRUE)
hd_trn = hd[trn_idx$Resample1, ]
hd_tst = hd[-trn_idx$Resample1, ]
#coerce cha to factor
hd_trn$num = factor(hd_trn$num)
hd_trn$location = factor(hd_trn$location)
hd_trn$cp = factor(hd_trn$cp)
hd_trn$sex = factor(hd_trn$sex)
hd_trn$fbs = factor(hd_trn$fbs)
hd_trn$restecg = factor(hd_trn$restecg)
hd_trn$exang = factor(hd_trn$exang)
hd_trn[which(hd_trn$chol == 0), ]$chol = NA
hd_trn_full = na.omit(hd_trn)
#est val
set.seed(42)
est_idx = createDataPartition(hd_trn_full$num, p = 0.80, list = TRUE)
hd_est = hd_trn_full[est_idx$Resample1, ]
hd_val = hd_trn_full[-est_idx$Resample1, ]
cv_5 = trainControl(method = "cv", number = 5)
hd_tree_mod = train(
form = num ~.,
data = hd_trn_full,
method = "rpart",
trControl = cv_5,
tuneLength = 10
)
hd_knn_mod = train(
form = num ~.,
data = hd_trn_full,
method = "knn",
trControl = cv_5,
tuneLength = 100
)
hd_rf_mod = train(
form = num ~ .,
data = hd_trn_full,
method = "rf",
trControl = cv_5,
verbose = FALSE
)
hd_tree_mod #0.5628655
hd_knn_mod #0.5546208
hd_rf_mod #0.5919417
knitr::opts_chunk$set(echo = FALSE, fig.align = 'center')
# load packages
library("tidyverse")
library("caret")
library("rpart")
library("rpart.plot")
# read full data
hd = readr::read_csv("data/hd.csv")
set.seed(42)
trn_idx = createDataPartition(hd$num, p = 0.80, list = TRUE)
hd_trn = hd[trn_idx$Resample1, ]
hd_tst = hd[-trn_idx$Resample1, ]
#coerce cha to factor
hd_trn$num = factor(hd_trn$num)
hd_trn$location = factor(hd_trn$location)
hd_trn$cp = factor(hd_trn$cp)
hd_trn$sex = factor(hd_trn$sex)
hd_trn$fbs = factor(hd_trn$fbs)
hd_trn$restecg = factor(hd_trn$restecg)
hd_trn$exang = factor(hd_trn$exang)
hd_trn[which(hd_trn$chol == 0), ]$chol = NA
hd_trn_full = na.omit(hd_trn)
#est val
set.seed(42)
est_idx = createDataPartition(hd_trn_full$num, p = 0.80, list = TRUE)
hd_est = hd_trn_full[est_idx$Resample1, ]
hd_val = hd_trn_full[-est_idx$Resample1, ]
cv_5 = trainControl(method = "cv", number = 5)
hd_tree_mod = train(
form = num ~.,
data = hd_trn_full,
method = "rpart",
trControl = cv_5,
tuneLength = 10
)
hd_knn_mod = train(
form = num ~.,
data = hd_trn_full,
method = "knn",
trControl = cv_5,
tuneLength = 100
)
hd_rf_mod = train(
form = num ~ .,
data = hd_trn_full,
method = "rf",
trControl = cv_5,
verbose = FALSE
)
hd_tree_mod #0.5628655
hd_knn_mod #0.5546208
hd_rf_mod #0.5919417
